#! /bin/bash

DENYLIST=(
    ".git"
    ".gitignore"
    ".travis.yml"
    ".build.yml"
    ".gitlab-ci.yml"
    "README.md"
)

root=$HOME
dotfile_name=".dotfiles"
dotfiles="$root/$dotfile_name/"
refresh=1

stow_package() {
    pkg_loc=$dotfiles$1
    # Check if the package has been stowed
    for fname in "$pkg_loc"/*; do
        refresh=1
        for rtfname in "$root"/*; do
            if [[ "$(basename "$fname")" == "$(basename "$rtfname")" ]]; then
                refresh=0
                break
            fi
        done
    done

    sdir="-d $dotfile_name"
    if [[ "$(pwd)/" == "$dotfiles" ]]; then
        sdir=""
    fi

    # Chdir to avoid some stow errors
    curdir=$(pwd)
    cd "$root" || return  # quit if we can't find the root
    if [[ $refresh -eq 0 ]]; then
        echo "Restowing $1..."
        # (stow does not like quoted things)
        # shellcheck disable=SC2086
        stow -t $root $sdir -R $1
    else
        echo "Stowing $1..."
        # (stow does not like quoted things)
        # shellcheck disable=SC2086
        stow -t $root $sdir -S $1
    fi
    cd "$curdir" || return
}


if ! hash stow; then
    echo "'stow' not installed. Please install and make sure the binary is available from the PATH."
fi

if [[ -d $dotfiles ]]; then
    if [[ $# -gt 0 ]]; then
        if [[ -d $dotfiles$1 ]]; then
            stow_package "$1"
        else
            echo "$1 is not a package in $dotfiles."
        fi
    else
        # Cycle through packages
        for pkg in "$dotfiles"/*; do
            skip=0
            for deny in ${DENYLIST[*]}; do
                if [[ "$(basename "$pkg")" == "$(basename "$deny")" ]]; then
                    skip=1
                fi
            done

            if [[ $skip -eq 1 ]]; then
                continue
            fi

            stow_package "$(basename "$pkg")"
        done
    echo "Done."
    fi
fi
